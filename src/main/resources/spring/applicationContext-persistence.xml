<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 注意:
        dataSource 与 sessionFactory 在 property 中是关键字
        <property name="dataSource" ref="productDataSource" />
        <property name="sessionFactory" ref="productDataSessionFactory" />
    -->

    <!-- productDbSource 数据源 -->
    <bean id="productDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${hibernate.connection.product.driver_class}"/> 
        <property name="jdbcUrl" value="${hibernate.connection.product.url}"/>
        <property name="properties"> 
            <props> 
                <prop key="user">${hibernate.connection.product.username}</prop>
                <prop key="password">${hibernate.connection.product.password}</prop>
            </props> 
        </property>
        <property name="testConnectionOnCheckin" value="true" />
        <property name="idleConnectionTestPeriod" value="300" />
        <property name="preferredTestQuery" value="SELECT 1" />
    </bean>


    <!-- productDbSessionFactory : 配置 hibernate 整合  -->
    <bean id="productDataSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="productDataSource" />

        <property name="hibernateProperties">
            <props>
                <!-- 创建 session 方式 hibernate4.x 的方式 -->
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
            
                <!-- 设置数据库方言 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <!-- 是否在控制台显示sql -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- 是否格式化sql，优化显示 -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!-- 是否开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <!-- 是否开启查询缓存 -->
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>    
                <!-- 数据库批量查询最大数 -->
                <prop key="hibernate.jdbc.fetch_size">500</prop>    
                <!-- 是否自动提交事务 -->
                <prop key="hibernate.connection.autocommit">true</prop>
                <!-- 指定 hibernate 在何时释放JDBC连接 -->
                <prop key="hibernate.connection.release_mode">auto</prop>

            </props>
        </property>

        <!-- 配置项目扫描的 model -->
        <property name="packagesToScan" value="com.angejia.dw.web_service.modules.*.model"/>
    </bean>


    <!-- productData 配置事务管理 -->
    <bean id="productDataTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="productDataSessionFactory" />
    </bean>
    <!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
    <tx:annotation-driven transaction-manager="productDataTransactionManager" proxy-target-class="true" />


    <!-- productJdbcTemplate -->
    <bean id="productJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="productDataSource"/>
    </bean>



</beans>
